//!
//! AUTHORS
//! Catherine Loader, catherine@research.bell-labs.com, October 23, 2000. [ bd0() ]
//! Morten Welinder, see Bugzilla PR#15628, 2014                          [ebd0() ]
//!
//! Merge in to R (and much more):
//!
//! Copyright (C) 2000-2022 The R Core Team
//!
//! This program is free software; you can redistribute it and/or modify
//! it under the terms of the GNU General Public License as published by
//! the Free Software Foundation; either version 2 of the License, or
//! (at your option) any later version.
//!
//! This program is distributed in the hope that it will be useful,
//! but WITHOUT ANY WARRANTY; without even the implied warranty of
//! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//! GNU General Public License for more details.
//!
//! You should have received a copy of the GNU General Public License
//! along with this program; if not, a copy is available at
//! https://www.R-project.org/Licenses/

use crate::libc::*;
use crate::nmath::*;
use crate::rmath::*;
use libm::frexp;

/// Calculates a stable deviance part using a method that reduces relative error
///
/// Evaluates the "deviance part"
/// bd0(x,M) :=  M * D0(x/M) = M*[ x/M * log(x/M) + 1 - (x/M) ] =
///           =  x * log(x/M) + M - x
/// where M = E[X] = n*p (or = lambda), for	  x, M > 0
///
/// in a manner that should be stable (with small relative error)
/// for all x and M=np. In particular for x/np close to 1, direct
/// evaluation fails, and evaluation is based on the Taylor series
/// of log((1+v)/(1-v)) with v = (x-M)/(x+M) = (x-np)/(x+np).
///
/// Martyn Plummer had the nice idea to use log1p() and Martin Maechler
/// emphasized the extra need to control cancellation.
///
/// MP:   t := (x-M)/M  ( <==> 1+t = x/M  ==>
///
/// bd0 = M*[ x/M * log(x/M) + 1 - (x/M) ] = M*[ (1+t)*log1p(t) + 1 - (1+t) ]
///     = M*[ (1+t)*log1p(t) - t ] =: M * p1log1pm(t) =: M * p1l1(t)
/// MM: The above is very nice, as the "simple" p1l1() function would be useful
///   to have available in a fast numerical stable way more generally.
pub fn bd0(x: f64, np: f64) -> f64 {
    if !r_finite(x) || !r_finite(np) || np == 0.0 {
        return ml_warn_return_nan();
    }

    if fabs(x - np) < 0.1 * (x + np) {
        let mut v: f64 = (x - np) / (x + np);
        let mut s: f64 = (x - np) * v;
        if fabs(s) < DBL_MIN {
            return s;
        }
        let mut ej: f64 = 2.0 * x * v;
        v *= v; // v^2
        for j in 1..1000 {
            // Taylor series; 1000: no infinite loop
            // as |v| < 0.1, v^2000 is "zero".
            ej *= v;
            let s_: f64 = s;
            s += ej / ((j << 1) + 1) as f64;
            if s == s_ {
                // Last term was effectively 0.
                return s;
            }
        }
    }
    println!("bd0: T.series failed to converge in 1000 iterations");
    return x * log(x / np) + np - x;
}

fn parse_hex_float(literal: &str) -> f32 {
    let (sign, rest) = if literal.starts_with('-') {
        (-1.0, &literal[1..])
    } else {
        (1.0, literal)
    };
    let parts: Vec<&str> = rest.split('p').collect();

    let mantissa_hex = parts[0];
    let mantissa = u32::from_str_radix(&mantissa_hex[2..].replace('.', ""), 16).unwrap() as f32;
    let mantissa_scale = 1.0 / (1 << mantissa_hex.split('.').nth(1).unwrap().len() * 4) as f32;

    let exponent: i32 = parts[1].parse().unwrap();

    sign * mantissa * mantissa_scale * 2f32.powi(exponent)
}

pub fn foo() -> f32 {
    let val = "0.6931471824645996";
    let x = f32::from_bits(0x3f317218);
    // let repr: FloatLiteral = val.parse().unwrap();
    // repr.convert::<f32>().inner()
    x
}

const bd0_scale: [[f32; 4]; 129] = [
    [
        0.6931471824645996,
        -1.9046542121259336e-09,
        -8.78318373858934e-17,
        3.061840738529369e-24,
    ], /* 128: log(2048/1024.) */
    [
        0.6853040456771851,
        -4.2578264469739224e-08,
        -1.1723105396588968e-15,
        6.20339263720161e-23,
    ], /* 129: log(2032/1024.) */
    [
        0.6773988008499146,
        2.274189014883632e-08,
        1.4411920431605914e-15,
        7.046384546650164e-23,
    ], /* 130: log(2016/1024.) */
    [
        0.6699305772781372,
        -4.8293856025338755e-08,
        -8.664795531738382e-16,
        7.049557660755325e-24,
    ], /* 131: log(2001/1024.) */
    [
        0.6624060869216919,
        -4.791602492559832e-08,
        -2.161508226230938e-15,
        7.092968360825275e-23,
    ], /* 132: log(1986/1024.) */
    [
        0.6548244953155518,
        6.237715233226027e-09,
        1.1806699607549086e-16,
        6.660323533535123e-25,
    ], /* 133: log(1971/1024.) */
    [
        0.6471850872039795,
        -4.220866856030625e-08,
        -1.3817589176253094e-15,
        -1.1159932395766606e-23,
    ], /* 134: log(1956/1024.) */
    [
        0.6400018930435181,
        -4.979170142860312e-08,
        4.887013763907625e-16,
        1.6847465694533583e-23,
    ], /* 135: log(1942/1024.) */
    [
        0.6327667236328125,
        -5.406177194799966e-08,
        -2.7224545250006775e-15,
        -2.9070780223955397e-23,
    ], /* 136: log(1928/1024.) */
    [
        0.6249561309814453,
        3.285935434860221e-08,
        1.201672936775467e-16,
        -8.668233185091897e-24,
    ], /* 137: log(1913/1024.) */
    [
        0.6181373596191406,
        -6.406189467789147e-11,
        3.550580962335878e-18,
        -3.623679406748965e-25,
    ], /* 138: log(1900/1024.) */
    [
        0.6107416152954102,
        4.229853800552519e-08,
        1.548143293520366e-15,
        -5.446353118719766e-23,
    ], /* 139: log(1886/1024.) */
    [
        0.6032907962799072,
        5.515817491641428e-08,
        2.1193636784238266e-15,
        1.247109826410663e-22,
    ], /* 140: log(1872/1024.) */
    [
        0.5963221788406372,
        3.28135385530004e-09,
        -1.4033469816541837e-16,
        5.544061982643074e-24,
    ], /* 141: log(1859/1024.) */
    [
        0.5893045663833618,
        4.307998580088679e-08,
        -3.2446651600595306e-15,
        -2.569782398567476e-23,
    ], /* 142: log(1846/1024.) */
    [
        0.5822374820709229,
        -3.983067387025585e-08,
        2.9387905513776885e-15,
        1.6124430498687833e-22,
    ], /* 143: log(1833/1024.) */
    [
        0.5751199722290039,
        2.242384056216906e-09,
        -2.204516403537114e-17,
        4.078543753751354e-25,
    ], /* 144: log(1820/1024.) */
    [
        0.5685046911239624,
        4.422870603093543e-08,
        2.7879957109977287e-16,
        -9.741708794029408e-24,
    ], /* 145: log(1808/1024.) */
    [
        0.5618454217910767,
        2.147161382026752e-08,
        1.3374919170106156e-15,
        -2.326922260336506e-23,
    ], /* 146: log(1796/1024.) */
    [
        0.554580807685852,
        4.57783499996367e-09,
        2.633145912141026e-16,
        2.070995903387998e-23,
    ], /* 147: log(1783/1024.) */
    [
        0.5478278398513794,
        -7.667999568639061e-09,
        6.199095327775322e-16,
        6.341979011056023e-24,
    ], /* 148: log(1771/1024.) */
    [
        0.5410289764404297,
        -3.7302321231891256e-08,
        -3.3801781496424835e-15,
        1.4469198371142414e-22,
    ], /* 149: log(1759/1024.) */
    [
        0.5347557067871094,
        4.382891916066001e-08,
        -8.601820749692393e-16,
        -8.775950563978016e-24,
    ], /* 150: log(1748/1024.) */
    [
        0.5278670787811279,
        1.0839714903454478e-08,
        -4.480281248130319e-16,
        3.8840996084516777e-23,
    ], /* 151: log(1736/1024.) */
    [
        0.5215104818344116,
        4.2031594205127476e-08,
        1.211009992711288e-15,
        -2.3206744819671555e-23,
    ], /* 152: log(1725/1024.) */
    [
        0.5145297050476074,
        -1.2322940889930578e-08,
        2.820084495413274e-16,
        1.880026562185923e-23,
    ], /* 153: log(1713/1024.) */
    [
        0.5080875158309937,
        -1.2297126872340414e-08,
        -4.295835588700959e-16,
        -1.8036626177499945e-23,
    ], /* 154: log(1702/1024.) */
    [
        0.5016034841537476,
        5.9145378372704727e-08,
        1.2728561033550608e-15,
        -5.824094430019416e-23,
    ], /* 155: log(1691/1024.) */
    [
        0.4950772523880005,
        1.4409851090135817e-08,
        -6.381910184083422e-17,
        -3.500509376717118e-25,
    ], /* 156: log(1680/1024.) */
    [
        0.48910707235336304,
        2.745798610703787e-08,
        -1.4470418644525664e-15,
        4.211866896949939e-23,
    ], /* 157: log(1670/1024.) */
    [
        0.4824984669685364,
        1.762245460668055e-08,
        4.128675224747099e-16,
        2.6082691866392177e-23,
    ], /* 158: log(1659/1024.) */
    [
        0.4764525294303894,
        -1.2470243504481004e-08,
        -9.162193924794196e-17,
        3.765782542240376e-24,
    ], /* 159: log(1649/1024.) */
    [
        0.469759464263916,
        -5.450353945946063e-09,
        -4.304846960468561e-16,
        2.074710343707083e-25,
    ], /* 160: log(1638/1024.) */
    [
        0.46363574266433716,
        -1.7013046527125653e-09,
        7.601622738878589e-18,
        -2.0415879231895994e-25,
    ], /* 161: log(1628/1024.) */
    [
        0.4574742913246155,
        6.943684516258486e-10,
        -2.5461310777374286e-17,
        5.5412533419976475e-25,
    ], /* 162: log(1618/1024.) */
    [
        0.4512746334075928,
        1.0731865174307131e-08,
        6.374000219845047e-16,
        3.901547318408994e-23,
    ], /* 163: log(1608/1024.) */
    [
        0.44503629207611084,
        2.8650656958006948e-08,
        -9.155352545558342e-16,
        -4.7365878254772817e-23,
    ], /* 164: log(1598/1024.) */
    [
        0.43938833475112915,
        2.6186132373595683e-08,
        1.3619601577579505e-15,
        -5.2672794844240613e-23,
    ], /* 165: log(1589/1024.) */
    [
        0.4330751895904541,
        1.9065733880552216e-08,
        1.014319201479946e-15,
        1.0145670737413337e-22,
    ], /* 166: log(1579/1024.) */
    [
        0.42735910415649414,
        -1.141359362577532e-08,
        1.3242044582274781e-16,
        -1.0240055893684678e-23,
    ], /* 167: log(1570/1024.) */
    [
        0.42096930742263794,
        -1.2778508917676845e-08,
        6.143525731270704e-16,
        1.419242178938019e-23,
    ], /* 168: log(1560/1024.) */
    [
        0.4151833653450012,
        -7.767916088141646e-09,
        5.955443124124071e-16,
        2.732668133771502e-23,
    ], /* 169: log(1551/1024.) */
    [
        0.4093637466430664,
        1.8807551072086426e-09,
        1.9153331349462894e-16,
        -5.6208063158075e-24,
    ], /* 170: log(1542/1024.) */
    [
        0.40351009368896484,
        -2.0416603518924603e-08,
        -2.93405013148838e-16,
        1.894346911970581e-24,
    ], /* 171: log(1533/1024.) */
    [
        0.39762192964553833,
        1.0016001361634608e-09,
        2.2863242352463633e-17,
        9.458133611770764e-25,
    ], /* 172: log(1524/1024.) */
    [
        0.3916988968849182,
        1.545909711353488e-08,
        1.0962823446210085e-15,
        3.108302239821126e-23,
    ], /* 173: log(1515/1024.) */
    [
        0.3864043951034546,
        -2.076412375373593e-09,
        1.5073464810114547e-16,
        7.412449454375094e-24,
    ], /* 174: log(1507/1024.) */
    [
        0.38041436672210693,
        -8.244395388601333e-09,
        1.4866224964678982e-16,
        -3.927292740683968e-24,
    ], /* 175: log(1498/1024.) */
    [
        0.3743882179260254,
        9.158529934438775e-09,
        5.656919067358501e-16,
        3.4213474905617904e-23,
    ], /* 176: log(1489/1024.) */
    [
        0.36900103092193604,
        -2.2253590969967263e-08,
        6.231405399548338e-16,
        -2.1564751355837555e-23,
    ], /* 177: log(1481/1024.) */
    [
        0.36358463764190674,
        -2.6778728567933285e-08,
        -9.943908455716573e-16,
        -4.704929732945495e-24,
    ], /* 178: log(1473/1024.) */
    [
        0.35745590925216675,
        -2.033036139437172e-08,
        -1.5794492077344114e-15,
        6.318678032068057e-23,
    ], /* 179: log(1464/1024.) */
    [
        0.3519763946533203,
        2.850385882879891e-08,
        -9.566434575519799e-16,
        -6.409595040255684e-24,
    ], /* 180: log(1456/1024.) */
    [
        0.3464667797088623,
        -1.236265312343221e-08,
        -6.003368248279719e-16,
        -2.860901497105794e-24,
    ], /* 181: log(1448/1024.) */
    [
        0.3409265875816345,
        -6.110413286464222e-10,
        1.7467136243918857e-17,
        1.9962587429804357e-25,
    ], /* 182: log(1440/1024.) */
    [
        0.3353555202484131,
        2.167272583619706e-08,
        -1.0918773497788125e-15,
        -3.047574780704126e-23,
    ], /* 183: log(1432/1024.) */
    [
        0.33045530319213867,
        -1.608884048209802e-08,
        -3.833435008838916e-16,
        -7.683741875124221e-24,
    ], /* 184: log(1425/1024.) */
    [
        0.3248254060745239,
        2.801670362373443e-08,
        -2.0725720961098414e-16,
        1.3160777896524739e-23,
    ], /* 185: log(1417/1024.) */
    [
        0.3191636800765991,
        2.6222629401218e-08,
        -1.3995222573204161e-15,
        8.599883909680833e-23,
    ], /* 186: log(1409/1024.) */
    [
        0.31418323516845703,
        2.6826626253750874e-08,
        -9.792556373536439e-16,
        2.2954960929108544e-23,
    ], /* 187: log(1402/1024.) */
    [
        0.3084607720375061,
        1.368350943664609e-08,
        5.591995050742643e-16,
        -1.1938701403427125e-23,
    ], /* 188: log(1394/1024.) */
    [
        0.3034266233444214,
        -8.629042369534545e-09,
        -5.222554219259392e-16,
        3.228770766379237e-23,
    ], /* 189: log(1387/1024.) */
    [
        0.2983669638633728,
        8.688424202318856e-09,
        2.764116793423446e-16,
        -1.0171858868428321e-23,
    ], /* 190: log(1380/1024.) */
    [
        0.29255300760269165,
        -4.91631446664087e-09,
        2.562284723960507e-16,
        -2.6341575505102177e-23,
    ], /* 191: log(1372/1024.) */
    [
        0.28743791580200195,
        -1.3782395669181824e-08,
        7.29039351877645e-16,
        -4.431977943282236e-24,
    ], /* 192: log(1365/1024.) */
    [
        0.28229647874832153,
        2.3770866164340987e-08,
        6.449228392264254e-16,
        3.417536976845211e-23,
    ], /* 193: log(1358/1024.) */
    [
        0.27712851762771606,
        1.4733029018998423e-08,
        6.793364114448283e-16,
        3.593898034032222e-24,
    ], /* 194: log(1351/1024.) */
    [
        0.27193373441696167,
        -1.8933320689029642e-08,
        7.77939410955583e-16,
        2.591972424742619e-23,
    ], /* 195: log(1344/1024.) */
    [
        0.2667117714881897,
        1.4300387263244119e-11,
        -7.458876800955772e-19,
        4.247418782257993e-26,
    ], /* 196: log(1337/1024.) */
    [
        0.2622140049934387,
        7.802219315067305e-09,
        5.022431038767539e-16,
        -2.4063174816868367e-23,
    ], /* 197: log(1331/1024.) */
    [
        0.25694090127944946,
        2.9618050234603288e-08,
        7.279528203645545e-16,
        2.638556081145549e-23,
    ], /* 198: log(1324/1024.) */
    [
        0.2516399025917053,
        -6.44787778725231e-09,
        4.122028133693521e-16,
        7.427559296153698e-24,
    ], /* 199: log(1317/1024.) */
    [
        0.2470736801624298,
        -1.9981829524340355e-09,
        -1.0909757890855787e-16,
        6.236552089808213e-24,
    ], /* 200: log(1311/1024.) */
    [
        0.24171993136405945,
        5.523085988556886e-09,
        -2.686547633696265e-16,
        -2.764495989170092e-24,
    ], /* 201: log(1304/1024.) */
    [
        0.23710808157920837,
        1.0085374313462125e-08,
        -4.775626813761317e-16,
        2.330620598032363e-23,
    ], /* 202: log(1298/1024.) */
    [
        0.231700599193573,
        -1.3946383603524737e-08,
        1.0970921279709183e-17,
        3.229909378627549e-25,
    ], /* 203: log(1291/1024.) */
    [
        0.22704219818115234,
        -6.451284839670279e-09,
        -4.2529947798112047e-16,
        -1.0260254677162862e-23,
    ], /* 204: log(1285/1024.) */
    [
        0.2223619818687439,
        1.4110645096820917e-08,
        6.025568981827254e-16,
        1.9385180739531644e-23,
    ], /* 205: log(1279/1024.) */
    [
        0.21765980124473572,
        -8.286782815503102e-09,
        5.232363919579781e-16,
        5.078443538654066e-23,
    ], /* 206: log(1273/1024.) */
    [
        0.21214580535888672,
        -8.254218641923217e-09,
        3.255553133321774e-16,
        1.571430013634162e-23,
    ], /* 207: log(1266/1024.) */
    [
        0.20739519596099854,
        -1.6149279691290985e-09,
        2.1131592679643073e-17,
        1.4275617427027514e-24,
    ], /* 208: log(1260/1024.) */
    [
        0.20262190699577332,
        8.597639933327628e-09,
        -3.3804619056798137e-16,
        2.5623235609364303e-24,
    ], /* 209: log(1254/1024.) */
    [
        0.19782572984695435,
        1.348296585490516e-08,
        -3.2024568730231384e-16,
        -2.5712252251631252e-23,
    ], /* 210: log(1248/1024.) */
    [
        0.1930064558982849,
        9.956859781112826e-10,
        9.001674563844606e-17,
        -3.754797654135173e-24,
    ], /* 211: log(1242/1024.) */
    [
        0.1889725625514984,
        4.2415360113068346e-09,
        3.8086815297465933e-16,
        -2.1147402916208568e-23,
    ], /* 212: log(1237/1024.) */
    [
        0.18411031365394592,
        6.931054841174955e-09,
        -3.4784858522920016e-16,
        2.4665943434547742e-23,
    ], /* 213: log(1231/1024.) */
    [
        0.17922431230545044,
        5.0739235035734964e-09,
        3.2221329189922637e-16,
        -1.0379009008973928e-23,
    ], /* 214: log(1225/1024.) */
    [
        0.17431432008743286,
        3.794385250444066e-09,
        3.190066898587176e-16,
        2.0292714723890484e-23,
    ], /* 215: log(1219/1024.) */
    [
        0.17020416259765625,
        3.4223344158590407e-09,
        -1.8846416901959178e-16,
        1.1415315069779235e-23,
    ], /* 216: log(1214/1024.) */
    [
        0.16524958610534668,
        -1.3210039284672348e-08,
        -2.3213954359040806e-16,
        3.043054213286757e-24,
    ], /* 217: log(1208/1024.) */
    [
        0.1602703034877777,
        6.007922159767531e-09,
        -7.521047737154288e-17,
        -1.2649106048711768e-25,
    ], /* 218: log(1202/1024.) */
    [
        0.15610191226005554,
        -1.2301535790015805e-08,
        3.0175617567361414e-16,
        -8.633806506327147e-24,
    ], /* 219: log(1197/1024.) */
    [
        0.15191605687141418,
        -1.4845571882915465e-08,
        -3.265830289949929e-16,
        -1.5268151962784823e-23,
    ], /* 220: log(1192/1024.) */
    [
        0.14686977863311768,
        -4.6748995785605985e-09,
        -4.294291341758996e-16,
        1.328295982896899e-23,
    ], /* 221: log(1186/1024.) */
    [
        0.142645001411438,
        9.186472027522541e-09,
        -8.049373155998929e-16,
        1.437998766909278e-23,
    ], /* 222: log(1181/1024.) */
    [
        0.1384023129940033,
        9.86511672351753e-09,
        -8.837306496940929e-16,
        7.295324909194215e-24,
    ], /* 223: log(1176/1024.) */
    [
        0.1332872211933136,
        9.990350768873668e-10,
        3.316946610734358e-17,
        2.7351440526086287e-24,
    ], /* 224: log(1170/1024.) */
    [
        0.129004567861557,
        -7.46120853989396e-09,
        -6.212113165383437e-16,
        1.855187264989731e-24,
    ], /* 225: log(1165/1024.) */
    [
        0.12470348179340363,
        -3.2924463155836747e-09,
        -7.404120132741752e-17,
        1.3246955625609024e-24,
    ], /* 226: log(1160/1024.) */
    [
        0.12038381397724152,
        3.3791991427278845e-09,
        1.6214981996371606e-16,
        -6.00070673940474e-24,
    ], /* 227: log(1155/1024.) */
    [
        0.11604541540145874,
        3.5638392237302696e-10,
        -7.354219635108878e-18,
        7.794312440645008e-26,
    ], /* 228: log(1150/1024.) */
    [
        0.11168810725212097,
        3.136765958089427e-09,
        -8.994406293238225e-19,
        -7.920937558182207e-26,
    ], /* 229: log(1145/1024.) */
    [
        0.10731174051761627,
        -4.728527791542092e-09,
        -4.2976339455270984e-16,
        5.351143287258107e-24,
    ], /* 230: log(1140/1024.) */
    [
        0.10291612148284912,
        2.8332007850906393e-09,
        4.925742757234052e-17,
        2.794436810397303e-24,
    ], /* 231: log(1135/1024.) */
    [
        0.09850110113620758,
        4.970725164810119e-09,
        4.130512756847049e-16,
        6.313449560595865e-25,
    ], /* 232: log(1130/1024.) */
    [
        0.09406651556491852,
        -6.525850970717784e-09,
        -1.3492816627243298e-16,
        -9.079650179574527e-24,
    ], /* 233: log(1125/1024.) */
    [
        0.08961215615272522,
        2.5369617517867482e-09,
        1.6110664594961319e-16,
        -5.189504504486964e-24,
    ], /* 234: log(1120/1024.) */
    [
        0.08603434264659882,
        -5.304795713811927e-09,
        5.127575488441481e-17,
        1.463615545692133e-24,
    ], /* 235: log(1116/1024.) */
    [
        0.08154398202896118,
        2.0112156384755053e-09,
        8.065769331577608e-17,
        -3.0150319017810437e-24,
    ], /* 236: log(1111/1024.) */
    [
        0.07703337073326111,
        5.7495661565099e-09,
        -2.503851097302985e-16,
        -1.846143093040508e-23,
    ], /* 237: log(1106/1024.) */
    [
        0.07250232994556427,
        1.177662634077592e-09,
        -3.525476857925506e-17,
        1.3164077898906505e-24,
    ], /* 238: log(1101/1024.) */
    [
        0.0688626617193222,
        -7.043545302565235e-09,
        2.49712406751501e-16,
        1.0686882487619963e-23,
    ], /* 239: log(1097/1024.) */
    [
        0.06429435312747955,
        -2.422082090447475e-09,
        -2.0555896149129847e-16,
        8.602907613530545e-24,
    ], /* 240: log(1092/1024.) */
    [
        0.0606246218085289,
        7.905943261166115e-12,
        -8.270443345471096e-19,
        -2.3533820836754142e-26,
    ], /* 241: log(1088/1024.) */
    [
        0.056018441915512085,
        -5.139745296034448e-10,
        -3.811651571366802e-17,
        1.9072195442219776e-24,
    ], /* 242: log(1083/1024.) */
    [
        0.052318163216114044,
        -3.5574325707443677e-09,
        9.191155834145393e-17,
        -5.321463973420977e-24,
    ], /* 243: log(1079/1024.) */
    [
        0.04767347127199173,
        -1.8026349302147082e-09,
        1.0329634289704177e-16,
        -2.2283569301283993e-24,
    ], /* 244: log(1074/1024.) */
    [
        0.04394212365150452,
        -1.795005699634089e-09,
        -5.3817402974104447e-17,
        -1.3996196977941442e-24,
    ], /* 245: log(1070/1024.) */
    [
        0.040196798741817474,
        3.8451930528538014e-10,
        -2.4485452721520977e-17,
        -7.386769024377949e-26,
    ], /* 246: log(1066/1024.) */
    [
        0.0354953333735466,
        -3.5901653872016936e-10,
        -2.073207767866976e-17,
        -2.412097216555168e-26,
    ], /* 247: log(1061/1024.) */
    [
        0.0317181795835495,
        6.87235046648027e-10,
        -6.430478093749473e-18,
        1.3508692031871337e-25,
    ], /* 248: log(1057/1024.) */
    [
        0.02792670577764511,
        7.568773385813188e-10,
        -4.22031585165944e-17,
        2.534760563692782e-24,
    ], /* 249: log(1053/1024.) */
    [
        0.02412080392241478,
        -1.1255707477175747e-09,
        4.89700584100947e-17,
        1.4172214525647275e-24,
    ], /* 250: log(1049/1024.) */
    [
        0.01934296265244484,
        1.9068610579431322e-10,
        -1.0635946218849709e-17,
        -5.300489542457734e-25,
    ], /* 251: log(1044/1024.) */
    [
        0.015504186972975731,
        -4.3701048335620385e-10,
        6.61106154763715e-18,
        2.5398086818405174e-25,
    ], /* 252: log(1040/1024.) */
    [
        0.01165061630308628,
        9.168890091615367e-10,
        -1.5848697818454755e-17,
        -1.350491609984469e-24,
    ], /* 253: log(1036/1024.) */
    [
        0.007782140746712685,
        -3.046577434773212e-10,
        7.793435996762285e-18,
        4.660100148208369e-25,
    ], /* 254: log(1032/1024.) */
    [
        0.0038986406289041042,
        -2.1324678134426733e-10,
        1.2541658163801307e-19,
        8.745035431740123e-27,
    ], /* 255: log(1028/1024.) */
    [0.0, 0.0, 0.0, 0.0], /* log(1024/1024) = log(1) = 0 */
];

fn ebd0(x: f64, m: f64, yh: &mut f64, yl: &mut f64) {
    let sb: i32 = 10;
    let s: f64 = (1u32 << sb) as f64;
    let n: i32 = 128;

    *yl = 0.0;
    *yh = 0.0;

    if x == m {
        return;
    }


    if x == 0.0 {
        *yh = m;
        return;
    }


    if m == 0.0 {
        *yh = ML_POSINF;
        return;
    }
    
    let (r, e) = frexp(m / x);
    
    // Prevent later overflow.
    if (M_LN2 * (-e as f64)) > 1.0 + DBL_MAX / x {
        *yh = ML_POSINF;
        return;
    }
}





