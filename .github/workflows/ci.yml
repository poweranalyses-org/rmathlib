name: ci

env:
  CARGO_TERM_COLOR: always

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: null

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Stable Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          components: 'clippy, rustfmt'
          toolchain: 'stable'

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Cargo clippy
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
          cd test/
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo fmt
        run: |
          cargo fmt --all --check
          cd test/
          cargo fmt --all --check

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::all -A rustdoc::private-doc-tests"
        run: cargo doc --all-features --no-deps

  test-versions:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - name: Cargo test
        run: |
          cargo test
          cd test/
          cargo test
