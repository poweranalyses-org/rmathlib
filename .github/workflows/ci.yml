name: ci

env:
  CARGO_TERM_COLOR: always

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: null

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # 1.43 is our lower bound because that is when f64::EPSILON
        # was introduced, which libm depends on.
        # 1.43 was unable to update registry.
        toolchain: ['1.46', 'stable', 'beta']
    steps:
      - uses: actions/checkout@v4
      - run: rustup default ${{ matrix.toolchain }}
      - name: Cargo test
        run: |
          cargo test
          cd test/
          cargo test

  check-format:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          components: 'clippy, rustfmt'
          toolchain: 'nightly'

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: 'check-format'

      - name: Cargo clippy
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
          cd test/
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo fmt
        run: |
          # Only available on nightly, unfortunately.
          # Ensures each import has its own `use` statement.
          # This makes it easier to quickly modify the imports in editors.
          echo 'imports_granularity = "Item"' > rustfmt.toml
          cargo fmt --all --check

          cp rustfmt.toml test/
          cd test/
          cargo fmt --all --check

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: 'check-docs'
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::all -A rustdoc::private-doc-tests"
        run: cargo doc --all-features --no-deps

